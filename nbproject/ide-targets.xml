<?xml version="1.0" encoding="UTF-8"?>
<project basedir=".." name="SigmaAntlr-IDE">

    <!--
    ========
    TASKDEFs
    ========
    -->

    <property file="nbproject/private/private.properties"/>
    <import   file="../build.xml"/>
    <property file="nbproject/project.properties"/>

    <path id="rcp">
        <path path="${run.classpath}"/>
    </path>
    <path id="dcp">
        <path path="${debug.classpath}"/>
    </path>
    <path id="tcp">
        <path path="${run.test.classpath}"/>
    </path>

    <!--
    ====
    INIT
    ====
    -->

    <target name="init" depends="init-ivy">
        <echo message="Welcome to the ${product.Name} v${product.Version}"/>
        <echo message="Specification Vendor:     ${spec.vendor}"/>
        <echo message=""/>
        <echo message="SIGMA_HOME    is set to:  ${sigma_home}"/>
        <echo message="SIGMA_SRC     is set to:  ${sigma_src}"/>
        <echo message="KBs_HOME      is set to:  ${kbs_home}"/>
        <echo message="Git dir       is set to:  ${ontologyportal.git}"/>
        <echo message="basedir       is set to:  ${basedir}"/>
        <echo message="Java Version via Ant:     ${ant.java.version}"/>
        <echo message="Java Version System Prop: ${java.version}"/>

        <tstamp>
            <format property="TODAY_US" pattern="EEE, d MMM yyyy HHmm Z" locale="en,US"/>
        </tstamp>
    </target>

    <!--
    =================
    RUN TASKS FOR SRC
    =================
    -->

    <target name="run" depends="clean,compile" description="Runs a main class with ${run.class} with ${run.args} set in build.properties">
        <java classname="${run.class}"
              classpathref="rcp"
              fork="true">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${run.args}"/>
        </java>
    </target>
    <target name="run-selected-file-in-java" depends="clean,compile">
        <fail unless="run.class">Must set property 'run.class'</fail>
        <java classname="${run.class}"
              classpathref="rcp"
              fork="true">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${run.args}"/>
        </java>
    </target>

    <!--
    ===================
    RUN TASKS FOR TESTS
    ===================
    -->

    <target name="test.unit" depends="clean,compile.test" description="Runs the UnitTestSuite">
        <ant antfile="${sigma_src}/nbproject/ide-targets.xml" target="prep.unit.config" useNativeBasedir="true" inheritAll="false"/>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${unit.test.suite}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="junit.report"/>
    </target>
    <target name="test.integration" depends="clean,compile.test" description="Runs the IntegrationTestSuite">
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${integration.test.suite}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
        <antcall target="junit.report"/>
    </target>
    <target name="run-selected-test-in-unit" depends="clean,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>
    <target name="run-single-test-method-in-unit" depends="clean,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" methods="${method}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>

    <!--
    ===================
    DEBUG TASKS FOR SRC
    ===================
    -->

    <target name="debug-nb" depends="clean,compile">
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="dcp"/>
        </nbjpdastart>
        <java classname="${run.class}"
              classpathref="dcp"
              fork="true">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${debug.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${run.args}"/>
        </java>
    </target>
    <target name="debug-selected-file-in-java" depends="clean,compile">
        <fail unless="debug.class">Must set property 'debug.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="dcp"/>
        </nbjpdastart>
        <java classname="${debug.class}"
              classpathref="dcp"
              fork="true">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${debug.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${basedir}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <arg line="${run.args}"/>
        </java>
    </target>

    <!--
    =====================
    DEBUG TASKS FOR TESTS
    =====================
    -->

    <target name="debug-selected-test-in-unit" depends="clean,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="tcp"/>
        </nbjpdastart>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath refid="tcp"/>
            <test name="${test.class}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>
    <target name="debug-single-test-method-in-unit" depends="clean,compile.test">
        <fail unless="test.class">Must set property 'test.class'</fail>
        <nbjpdastart addressproperty="jpda.address" name="${impl.title}" transport="${debug.transport}">
            <classpath refid="tcp"/>
        </nbjpdastart>
        <junit printsummary="yes"
               showoutput="yes"
               fork="yes">
            <jvmarg value="-agentlib:jdwp=transport=${debug.transport},address=${jpda.address}"/>
            <jvmarg line="${run.jvmargs}"/>
            <env key="SIGMA_HOME" value="${sigma_home}"/>
            <env key="ONTOLOGYPORTAL_GIT" value="${ontologyportal.git}"/>
            <env key="SIGMA_SRC" value="${sigma_src}"/>
            <env key="CATALINA_HOME" value="${catalina.base}"/>
            <formatter type="plain" usefile="false"/>
            <classpath>
                <path refid="tcp"/>
            </classpath>
            <test name="${test.class}" methods="${method}" haltonfailure="no" todir="${reports.dir}">
                <formatter type="xml"/>
            </test>
        </junit>
    </target>

    <!--
    =====
    ADMIN
    =====
    -->

    <target name="dist" depends="clean,compile" description="Prepare and distribute the ${app.name}.war and ${app.name}.jar files and place in ${dist.dir}.">
        <manifest file="${manifest.mf}">
            <attribute name="Built-By" value="${my.name} ${my.email}"/>
            <attribute name="Specification-Title"
                       value="${product.Name}"/>
            <attribute name="Specification-Version"
                       value="${product.version.major}.${product.version.minor}"/>
            <attribute name="Specification-Vendor"
                       value="${spec.vendor}"/>
            <attribute name="Implementation-Title"
                       value="${impl.title}"/>
            <attribute name="Implementation-Version"
                       value="${product.Version} built on ${TODAY_US}"/>
            <attribute name="Implementation-Vendor"
                       value="${nps}, ${moves.institute}, ${savage.research.group}"/>
            <attribute name="Implementation-URL"
                       value="${sumo.url}"/>
            <attribute name="Implementation-Vendor-Id"
                       value="${impl.vendor.id}"/>
            <attribute name="Main-Class"
                       value="${main.class}"/>
        </manifest>
        <delete dir="${dist.dir}"/>
        <jar destfile="${dist.jar}"
             basedir="${build.classes}"
             manifest="${manifest.mf}">
            <metainf file="${project.license}"/>
        </jar>
    </target>

    <target name="thorough.clean" depends="clean">
        <delete includeemptydirs="true" failonerror="false">
            <!-- JUnit generated products -->
            <fileset dir="${basedir}">
                <include name="junit*.properties"/>
            </fileset>
        </delete>
    </target>
    <target name="all" depends="clean,dist">
        <echo message="System date/time is: ${TODAY_US}"/>
    </target>

    <!--
    =========
    UTILITIES
    =========
    -->

    <target name="regen.suokif.parser" description="Regenerates the Suokif parser based on the current ${grammar.file}">
        <delete>
            <fileset dir="${src.dir}/com/articulate/sigma/parsing">
                <exclude name="SuokifParserErrorListener.java"/>
            </fileset>
        </delete>
        <java classname="org.antlr.v4.Tool"
              fork="true">
            <classpath>
                <pathelement location="lib/antlr4-4.9.3.jar"/>
                <pathelement location="lib/antlr4-runtime-4.9.3.jar"/>
                <pathelement location="lib/antlr-runtime-3.5.2.jar"/>
                <pathelement location="lib/ST4-4.3.1.jar"/>
            </classpath>
            <arg line="${antlr.args}"/>
        </java>
        <delete>
            <fileset dir="${src.dir}/com/articulate/sigma/parsing">
                <include name="*.interp"/>
                <include name="*.tokens"/>
            </fileset>
        </delete>
        <antcall target="dist"/>
    </target>

</project>
